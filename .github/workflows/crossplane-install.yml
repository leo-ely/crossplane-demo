name: Crossplane Installation

on:
  workflow_call:

jobs:
  crossplane-install:
    name: "Crossplane Installation"
    runs-on: ubuntu-latest
    environment: production
    concurrency: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ vars.AWS_EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}
          kubectl config set-context --current --namespace=default

      - name: Install Crossplane
        run: |
          kubectl create namespace crossplane-system --dry-run=client -o yaml | kubectl apply -f -
          if kubectl get deployment crossplane -n crossplane-system >/dev/null 2>&1 && \
            kubectl wait --for=condition=available deployment/crossplane -n crossplane-system >/dev/null --timeout 5m 2>&1; then
            echo "Crossplane is already installed and healthy, skipping installation"
          else
            echo "Crossplane not found or not healthy, installing..."
            helm repo add crossplane-stable https://charts.crossplane.io/stable
            helm repo update
            if helm list -n crossplane-system | grep -q "crossplane"; then
              echo "Removing existing Helm release 'crossplane'..."
              helm uninstall crossplane -n crossplane-system --wait || echo "Uninstall failed, proceeding with installation"
            fi
            helm install crossplane --namespace crossplane-system crossplane-stable/crossplane --version 1.14.0
          fi
          kubectl wait --for=condition=available deployment/crossplane -n crossplane-system --timeout 5m
